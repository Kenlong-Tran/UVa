import java.math.BigInteger;
import java.util.Scanner;

class Main {

	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		while (scan.hasNext()) {
			int dimension = scan.nextInt();
			calculate(dimension);
		}
		scan.close();
	}

	private static void calculate(int n) {
		double s2 = (2 * Math.pow(n, 3) + 3 * Math.pow(n, 2) + n) / 6;
		double s3 = (Math.pow(n, 4) + 2 * Math.pow(n, 3) + Math.pow(n, 2)) / 4;
		double s4 = (6 * Math.pow(n, 5) + 15 * Math.pow(n, 4) + 10 * Math.pow(n, 3) - n) / 30;
		BigInteger r2 = (choose(n + 1, 2).pow(2)).subtract(BigInteger.valueOf((long) s2));
		BigInteger r3 = (choose(n + 1, 2).pow(3)).subtract(BigInteger.valueOf((long) s3));
		BigInteger r4 = (choose(n + 1, 2).pow(4)).subtract(BigInteger.valueOf((long) s4));
		System.out.println((int) s2 + " " + r2 + " " + (int) s3 + " " + r3 + " " + (int) s4 + " " + r4);

	}

	private static BigInteger choose(int n, int k) {
		int top = n;
		int bottom = k;
		BigInteger answer = BigInteger.ONE;
		for (int i = 0; i < bottom; i++) {
			answer = answer.multiply(BigInteger.valueOf(top - i)).divide(BigInteger.valueOf(i + 1));
		}
		return answer;
	}
}