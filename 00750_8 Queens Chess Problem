import java.util.Scanner;

class Main {
	static int answer;
	static int[][] board;

	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		boolean first = false;
		int cases = scan.nextInt();
		for (int i = 0; i < cases; i++) {
			int row = scan.nextInt();
			int col = scan.nextInt();
			board = new int[8][8];
			board[row - 1][col - 1] = 1;
			answer = 1;
			if (first) {
				System.out.println();
			}
			first = true;
			System.out.println("SOLN       COLUMN");
			System.out.println(" #      1 2 3 4 5 6 7 8");
			System.out.println();
			search(0, 0, 1);
		}
		scan.close();
	}

	private static void search(int row, int col, int count) {
		if (count == 8) {
			print();
		} else if (row == 7 && col == 7 && count == 7) {
			if (isPossible(row, col)) {
				board[row][col] = 1;
				print();
				board[row][col] = 0;
			}
		} else {
			if (isPossible(row, col)) {
				if (row < 7) {
					board[row][col] = 1;
					search(row + 1, col, count + 1);
					board[row][col] = 0;
				} else if (col < 7) {
					board[row][col] = 1;
					search(0, col + 1, count + 1);
					board[row][col] = 0;
				}
			}
			if (row < 7) {
				search(row + 1, col, count);
			} else if (col < 7) {
				search(0, col + 1, count);
			}
		}
	}

	private static void print() {
		String result = "";
		for (int i = 0; i < 8; i++) {
			for (int j = 0; j < 8; j++) {
				if (board[j][i] == 1) {
					result = result + (j + 1) + " ";
				}
			}
		}
		result = result.substring(0, result.length() - 1);
		System.out.printf("%2d      %s%n", answer, result);
		answer++;
	}

	private static boolean isPossible(int row, int col) {
		for (int a = 0; a < 8; a++) {
			if (board[row][a] == 1) {
				return false;
			}
			if (board[a][col] == 1) {
				return false;
			}
		}
		int i = row;
		int j = col;
		while (i >= 0 && j >= 0) {
			if (board[i][j] == 1) {
				return false;
			}
			i--;
			j--;
		}
		i = row;
		j = col;
		while (i < 8 && j < 8) {
			if (board[i][j] == 1) {
				return false;
			}
			i++;
			j++;
		}
		i = row;
		j = col;
		while (i >= 0 && j < 8) {
			if (board[i][j] == 1) {
				return false;
			}
			i--;
			j++;
		}
		i = row;
		j = col;
		while (i < 8 && j >= 0) {
			if (board[i][j] == 1) {
				return false;
			}
			i++;
			j--;
		}
		return true;
	}
}