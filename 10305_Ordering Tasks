import java.util.ArrayList;
import java.util.HashMap;
import java.util.Scanner;

public class Main {
	private static int number;
	private static int[] visited;
	private static boolean[] visit;

	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		while (scan.hasNext()) {
			int n = scan.nextInt();
			int m = scan.nextInt();
			if (n == 0 && m == 0) {
				break;
			}
			HashMap<Integer, ArrayList<Integer>> map = new HashMap<Integer, ArrayList<Integer>>();
			for (int i = 0; i <= n; i++) {
				map.put(i, new ArrayList<Integer>());
			}
			for (int i = 0; i < m; i++) {
				int first = scan.nextInt();
				int second = scan.nextInt();
				if (first > 0 && first <= n && second > 0 && second <= n) {
					ArrayList<Integer> current = map.get(first);
					if (!current.contains(second)) {
						current.add(second);
					}
					map.put(first, current);
				}
			}

			visited = new int[n + 1];
			visit = new boolean[n + 1];
			number = n;
			for (int i = 1; i <= n; i++) {
				if (!visit[i]) {
					search(i, map);
				}
			}

			int[] answer = new int[n + 1];
			for (int i = 1; i <= n; i++) {
				answer[visited[i]] = i;
			}
			for (int i = 1; i < n; i++) {
				System.out.print(answer[i] + " ");
			}
			System.out.println(answer[n]);
		}
		scan.close();
	}

	private static void search(int j, HashMap<Integer, ArrayList<Integer>> map) {
		ArrayList<Integer> nodes = map.get(j);
		visit[j] = true;
		for (int i = 0; i < nodes.size(); i++) {
			int vertex = nodes.get(i);
			if (!visit[vertex]) {
				search(vertex, map);
			}
		}
		visited[j] = number;
		number--;
	}
}